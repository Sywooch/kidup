<?php

namespace user\models\profile;

use app\components\behaviors\PurifierBehavior;
use images\components\ImageHelper;
use libphonenumber\NumberParseException;
use libphonenumber\PhoneNumberUtil;
use user\models\country\Country;
use Yii;
use yii\helpers\ArrayHelper;

class Profile extends ProfileBase
{
    public $img;

    public function behaviors()
    {
        return array_merge(parent::behaviors(), [
            'purifierBehavior' => [
                'class' => PurifierBehavior::className(),
                'attributes' => [
                    self::EVENT_BEFORE_VALIDATE => ['description']
                ],
                'textAttributes' => [
                    self::EVENT_BEFORE_VALIDATE => ['first_name', 'last_name']
                ]
            ]
        ]);
    }

    public function scenarios()
    {
        return ArrayHelper::merge([
            'settings' => ['email', 'language', 'currency_id', 'phone_number', 'phone_country'],
            'verification' => ['phone_number', 'phone_country'],
            'phonecode' => ['phone_verified'],
            'social-connect-image' => ['img'],
        ], parent::scenarios());
    }

    /**
     * Returns the phone number of a profile
     * @return bool|string
     */
    public function getPhoneNumber()
    {
        if ($this->phone_number == null || $this->phone_country == null) {
            return false;
        }
        return "+" . $this->phone_country . ' ' . $this->phone_number;
    }

    /**
     * Returns the first name of a user
     * @return string
     */
    public function getName()
    {
        return isset($this->first_name) ? $this->first_name : \Yii::t('profile.default_user_name', 'KidUp User {id}', [
            'id' => $this->user_id
        ]);
    }

    /**
     * Returns the fill name of a profile
     * @return string
     */
    public function getFullName()
    {
        return $this->first_name . ' ' . $this->last_name;
    }

    /**
     * Calculates whether the phone number of the profile is valid
     * @return bool
     */
    public function isValidPhoneNumber()
    {
        if (empty($this->phone_number)) {
            return false;
        }
        $number = $this->phone_country . ' ' . $this->phone_number;
        $phoneUtil = PhoneNumberUtil::getInstance();
        $countries = Country::find()->indexBy('phone_prefix')->all();
        try {
            $numberProto = $phoneUtil->parse($number, $countries[$this->phone_country]->code);
            return $phoneUtil->isValidNumber($numberProto);
        } catch (NumberParseException $e) {
            return false;
        }
    }

    /**
     * Returns the image of a profile
     * @return string url of image
     */
    public function getImgUrl()
    {
        return ImageHelper::url($this->getAttribute('img'));
    }

    public function beforeSave($insert)
    {
        $this->birthday = strtotime($this->birthday);
        if ($this->isAttributeChanged('language') && \Yii::$app->has('session')) {
            Yii::$app->session->set('lang', $this->language);
        }
        return parent::beforeSave($insert);
    }

    public function afterFind()
    {
        $this->birthday = date('d-m-Y', $this->birthday);
        parent::afterFind(); // TODO: Change the autogenerated stub
    }
}
